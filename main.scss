// _pave3d.scss

// Dimensions du pavé
$hauteur: 200px;
$largeur: 200px;
$profondeur: 20px;

// Couleurs des background
$color-body: rgb(252, 193, 106);
$color-scene: bisque;
$color-little-scene: aquamarine;

// Couleurs des faces
$color-front: rgb(0, 0, 0);
$color-back: rgb(0, 0, 0);
$color-right: rgb(255, 0, 0);
$color-left: rgb(0, 255, 0);
$color-top: rgba(25, 0, 255, 0.6);
$color-bottom: rgba(255, 0, 255, 0.6);

// Styles globaux
body {
    margin: 0;
    height: 100vh;
    background-color: $color-body;
}

.wrapper-center {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100vw;
    height: 100vh;
}

.scene {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 300px;
    height: 300px;
    background-color: $color-scene;
    perspective: 800px;

    .little-scene {
        background-color: $color-little-scene;
        display: flex;
        justify-content: center;
        align-items: center;
        width: $largeur;
        height: $hauteur;
        perspective: 800px;

        .cube {
            position: absolute;
            width: $largeur;
            height: $hauteur;
            transform-style: preserve-3d;
            transform-origin: 0% 50%;
            transform: rotateY(0deg);
            transition: transform 1s ease;

            .face {
                display: flex;
                justify-content: center;
                align-items: center;
                position: absolute;
                font-size: 1.5rem;
                font-weight: bold;
                color: #fff;
                text-align: center;
                line-height: 1;
                border: 2px solid #fff;
            }

            // Face avant et arrière
            .front,
            .back {
                width: $largeur;
                height: $hauteur;
            }

            .front {
                background: $color-front;
                transform: translateZ($profondeur / 2);
            }

            .back {
                background: $color-back;
                transform: rotateY(180deg) translateZ($profondeur / 2);
            }

            // Faces droite et gauche
            .right,
            .left {
                width: $profondeur;
                height: $hauteur;
            }

            .right {
                background: $color-right;
                transform: rotateY(90deg) translateZ($largeur - ($profondeur / 2));
            }

            .left {
                background: $color-left;
                transform: rotateY(-90deg) translateZ($profondeur / 2);
            }

            // Faces dessus et dessous
            .top,
            .bottom {
                width: $largeur;
                height: $profondeur;
            }

            .top {
                background: $color-top;
                transform: rotateX(90deg) translateZ($profondeur / 2);
            }

            .bottom {
                background: $color-bottom;
                transform: rotateX(-90deg) translateZ($largeur - ($profondeur / 2));
            }
        }
    }

    // Rotation on hover - placed after cube styles so it overrides transform
    &:hover .little-scene .cube {
        transform: rotateY(-130deg);
    }
}